/**
 * Mastodon API
 * https://docs.joinmastodon.org/methods/
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: erin@sockpuppet.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import OauthPostBody from '../model/OauthPostBody';
import Response200 from '../model/Response200';

/**
* Oauth service.
* @module api/OauthApi
* @version 1.0.0
*/
export default class OauthApi {

    /**
    * Constructs a new OauthApi. 
    * @alias module:api/OauthApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the oauthAuthorizeGET operation.
     * @callback module:api/OauthApi~oauthAuthorizeGETCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/String} responseType Should be set equal to code.
     * @param {String} clientId The client ID, obtained during app registration.
     * @param {String} redirectUri Set a URI to redirect the user to. If this parameter is set to urn:ietf:wg:oauth:2.0:oob then the authorization code will be shown instead. Must match one of the redirect_uris declared during app registration.
     * @param {Object} opts Optional parameters
     * @param {String} opts.scope List of requested OAuth scopes, separated by spaces (or by pluses, if using query parameters). Must be a subset of scopes declared during app registration. If not provided, defaults to read.
     * @param {Boolean} opts.forceLogin Forces the user to re-login, which is necessary for authorizing with multiple accounts from the same instance.
     * @param {module:api/OauthApi~oauthAuthorizeGETCallback} callback The callback function, accepting three arguments: error, data, response
     */
    oauthAuthorizeGET(responseType, clientId, redirectUri, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'responseType' is set
      if (responseType === undefined || responseType === null) {
        throw new Error("Missing the required parameter 'responseType' when calling oauthAuthorizeGET");
      }
      // verify the required parameter 'clientId' is set
      if (clientId === undefined || clientId === null) {
        throw new Error("Missing the required parameter 'clientId' when calling oauthAuthorizeGET");
      }
      // verify the required parameter 'redirectUri' is set
      if (redirectUri === undefined || redirectUri === null) {
        throw new Error("Missing the required parameter 'redirectUri' when calling oauthAuthorizeGET");
      }

      let pathParams = {
      };
      let queryParams = {
        'response_type': responseType,
        'client_id': clientId,
        'redirect_uri': redirectUri,
        'scope': opts['scope'],
        'force_login': opts['forceLogin']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/oauth/authorize', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the oauthAuthorizePOST operation.
     * @callback module:api/OauthApi~oauthAuthorizePOSTCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/OauthPostBody} opts.oauthPostBody 
     * @param {module:api/OauthApi~oauthAuthorizePOSTCallback} callback The callback function, accepting three arguments: error, data, response
     */
    oauthAuthorizePOST(opts, callback) {
      opts = opts || {};
      let postBody = opts['oauthPostBody'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/form-data'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/oauth/authorize', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the oauthRevokePOST operation.
     * @callback module:api/OauthApi~oauthRevokePOSTCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/OauthApi~oauthRevokePOSTCallback} callback The callback function, accepting three arguments: error, data, response
     */
    oauthRevokePOST(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/oauth/revoke', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the oauthTokenPOST operation.
     * @callback module:api/OauthApi~oauthTokenPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Response200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Obtain an access token, to be used during API calls that are not public.
     * @param {Object} opts Optional parameters
     * @param {module:model/OauthPostBody} opts.oauthPostBody 
     * @param {module:api/OauthApi~oauthTokenPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Response200}
     */
    oauthTokenPOST(opts, callback) {
      opts = opts || {};
      let postBody = opts['oauthPostBody'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/form-data'];
      let accepts = ['application/json'];
      let returnType = Response200;
      return this.apiClient.callApi(
        '/oauth/token', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
